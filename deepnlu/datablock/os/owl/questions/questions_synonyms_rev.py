
#!/usr/bin/env python
# -*- coding: UTF-8 -*-

# pylint:disable=bad-whitespace
# pylint:disable=line-too-long
# pylint:disable=too-many-lines
# pylint:disable=invalid-name

# #########################################################
#
#       ************** !! WARNING !! ***************
#       ******* THIS FILE WAS AUTO-GENERATED *******
#       ********* DO NOT MODIFY THIS FILE **********
#
# #########################################################

class QuestionsSynonymsRev(object):

    @staticmethod
    def prov() -> dict:
        return {
 'action': ['router.py',
            'plac_core.py',
            'owl2py_orchestrator.py',
            'generate_runtime_dictionaries.py',
            'generate_runtime_dictionary.py',
            'owl_data_load_dict.py',
            'common_utils.py'],
 'config': {'classname': 'QuestionsSynonyms',
            'filename': 'questions_synonyms',
            'files': ['questions.txt'],
            'queries': ['synonyms.sparql'],
            'reverse': True,
            'transformers': ['lowercase', 'synonyms']},
 'source': 'questions.owl',
 'time': '2022-05-13 12:06:42.618840'}

    __data = {
    'affective': ['affective'],
    'analysis': ['analysis'],
    'application': ['application'],
    'boolean': ['boolean'],
    'choice': ['choice'],
    'clarifying': ['clarifying'],
    'close ended': ['close_ended'],
    'closed present simple do question': ['closed_present_simple_do_question'],
    'closed present simple question': ['closed_present_simple_question'],
    'comparison': ['comparison'],
    'complete tense': ['perfect_tense_question'],
    'comprehension': ['comprehension'],
    'continuous question': ['continuous_question'],
    'convergent': ['convergent'],
    'critical awareness': ['critical_awareness'],
    'deductive inference': ['deductive_inference'],
    'disjunctive': ['disjunctive'],
    'divergent': ['divergent'],
    'do question': ['do_question'],
    'double barreled': ['double_barreled'],
    'evaluation': ['evaluation'],
    'evaluative': ['evaluative'],
    'factual': ['factual'],
    'first person pronoun': ['first_person_pronoun'],
    'future continuous question': ['future_continuous_question'],
    'future continuous where question': ['future_continuous_where_question'],
    'future continuous why question': ['future_continuous_why_question'],
    'future pefect why question': ['future_pefect_why_question'],
    'future perfect continuous how question': [   'future_perfect_continuous_how_question'],
    'future perfect continuous question': [   'future_perfect_continuous_question'],
    'future perfect question': ['future_perfect_question'],
    'future perfect statement': ['future_perfect_statement'],
    'future perfect when question': ['future_perfect_when_question'],
    'future simple how question': ['future_simple_how_question'],
    'future simple question': ['future_simple_question'],
    'future simple when question': ['future_simple_when_question'],
    'future simple where question': ['future_simple_where_question'],
    'future tense question': ['future_tense_question'],
    'general question': ['boolean'],
    'he': ['he'],
    'her': ['her'],
    'him': ['him'],
    'how question': ['how_question'],
    'hypothetical': ['hypothetical'],
    'i': ['i'],
    'inference': ['inference'],
    'it': ['it'],
    'knowledge': ['wh_question'],
    'leading': ['leading'],
    'loaded': ['loaded'],
    'me': ['me'],
    'mine': ['mine'],
    'my': ['my'],
    'myself': ['myself'],
    "one's self": ['ourselves'],
    'ones self': ['ourselves'],
    'onesself': ['ourselves'],
    'open ended': ['open_ended'],
    'open present simple how question': ['open_present_simple_how_question'],
    'open present simple question': ['open_present_simple_question'],
    'open present simple what question': ['open_present_simple_what_question'],
    'open present simple when question': ['open_present_simple_when_question'],
    'open present simple where question': [   'open_present_simple_where_question'],
    'open present simple who question': ['open_present_simple_who_question'],
    'open present simple why question': ['open_present_simple_why_question'],
    'open question': ['open_ended'],
    'organization': ['organization'],
    'our': ['our'],
    'ourself': ['ourselves'],
    'ourselves': ['ourselves'],
    'past continuous question': ['past_continuous_question'],
    'past continuous what question': ['past_continuous_what_question'],
    'past continuous where question': ['past_continuous_where_question'],
    'past continuous why question': ['past_continuous_why_question'],
    'past perfect continuous how question': [   'past_perfect_continuous_how_question'],
    'past perfect continuous question': ['past_perfect_continuous_question'],
    'past perfect continuous what question': [   'past_perfect_continuous_what_question'],
    'past perfect continuous why question': [   'past_perfect_continuous_why_question'],
    'past perfect how question': ['past_perfect_how_question'],
    'past perfect question': ['past_perfect_question'],
    'past perfect statement': ['past_perfect_statement'],
    'past perfect when question': ['past_perfect_when_question'],
    'past perfect why question': ['past_perfect_why_question'],
    'past simple how question': ['past_simple_how_question'],
    'past simple question': ['past_simple_question'],
    'past simple when question': ['past_simple_when_question'],
    'past simple who question': ['past_simple_who_question'],
    'past simple why question': ['past_simple_why_question'],
    'past tense question': ['past_tense_question'],
    'perfect continuous question': ['perfect_continuous_question'],
    'perfect tense question': ['perfect_tense_question'],
    'polar question': ['boolean'],
    'present continuous question': ['present_continuous_question'],
    'present continuous what question': ['present_continuous_what_question'],
    'present continuous who question': ['present_continuous_who_question'],
    'present continuous why question': ['present_continuous_why_question'],
    'present perfect continuous question': [   'present_perfect_continuous_question'],
    'present perfect continuous where question': [   'present_perfect_continuous_where_question'],
    'present perfect continuous why question': [   'present_perfect_continuous_why_question'],
    'present perfect how question': ['present_perfect_how_question'],
    'present perfect question': ['present_perfect_question'],
    'present perfect statement': ['present_perfect_statement'],
    'present perfect why question': ['present_perfect_why_question'],
    'present simple do question': ['present_simple_do_question'],
    'present simple question': ['present_simple_question'],
    'present simple what question': ['present_simple_what_question'],
    'present simple where question': ['present_simple_where_question'],
    'present tense question': ['present_tense_question'],
    'probing': ['probing'],
    'problem solving': ['problem_solving'],
    'problem-solving': ['problem_solving'],
    'prompting': ['prompting'],
    'pronoun': ['pronoun'],
    'question component': ['question_component'],
    'recall question': ['simple_recall'],
    'redirection': ['redirection'],
    'refocusing': ['refocusing'],
    'rhetorical': ['rhetorical'],
    'second person pronoun': ['second_person_pronoun'],
    'she': ['she'],
    'simple recall': ['simple_recall'],
    'simple tense question': ['simple_tense_question'],
    'special question': ['wh_question'],
    'structuring': ['structuring'],
    'synthesis': ['synthesis'],
    'tag': ['tag'],
    'tag question': ['disjunctive'],
    'them': ['them'],
    'they': ['they'],
    'third person pronoun': ['third_person_pronoun'],
    'us': ['us'],
    'we': ['we'],
    'wh question': ['wh_question'],
    'what is': ['what_is'],
    'what is your': ['what_is_your_question'],
    'what is your question': ['what_is_your_question'],
    'what question': ['what_question'],
    "what's": ['what_is'],
    'when question': ['when_question'],
    'where question': ['where_question'],
    'who question': ['who_question'],
    'why question': ['why_question'],
    'yes/no question': ['boolean'],
    'you': ['you'],
    'your': ['your'],
    'yours': ['your'],
    'yourself': ['yourself']}

    def data(self) -> dict:
        return self.__data

    def find(self,
             term: str) -> str or None:
        if term in self.__data:
            return self.__data[term]
