
#!/usr/bin/env python
# -*- coding: UTF-8 -*-

# pylint:disable=bad-whitespace
# pylint:disable=line-too-long
# pylint:disable=too-many-lines
# pylint:disable=invalid-name

# #########################################################
#
#       ************** !! WARNING !! ***************
#       ******* THIS FILE WAS AUTO-GENERATED *******
#       ********* DO NOT MODIFY THIS FILE **********
#
# #########################################################

class NursingTypes(object):

    @staticmethod
    def prov() -> dict:
        return {
 'action': ['router.py',
            'plac_core.py',
            'owl2py_orchestrator.py',
            'generate_runtime_dictionaries.py',
            'generate_runtime_dictionary.py',
            'owl_data_load_dict.py',
            'common_utils.py'],
 'config': {'classname': 'NursingTypes',
            'filename': 'nursing_types',
            'queries': ['subclass.sparql'],
            'reverse': True,
            'transformers': ['types']},
 'source': 'nursing.owl',
 'time': '2022-05-20 17:02:25.345703'}

    __data = {
    'acute_care': ['health_care'],
    'admission': ['event'],
    'advanced_practice_registered_nurse': ['registered_nurse'],
    'airport': ['building'],
    'american': ['nationality'],
    'american_association_of_colleges_of_nursing': ['association'],
    'american_nurses_association': ['association'],
    'apothecary': ['pharmacist'],
    'associates_degree': ['diploma'],
    'association': ['group'],
    'bachelor_of_arts': ['bachelors_degree'],
    'bachelor_of_science': ['bachelors_degree'],
    'bachelor_of_science_in_nursing': ['bachelor_of_science'],
    'bachelors_degree': ['diploma'],
    'care_event': ['event'],
    'catholic_church': ['church'],
    'century': ['event'],
    'certification': ['training'],
    'chemist': ['provider'],
    'church': ['religious_group'],
    'city': ['geopolitical_entity'],
    'clinic': ['building'],
    'clinical_competency': ['competency'],
    'clinical_evaluation': ['evaluation'],
    'clinical_outcome': ['outcome'],
    'clinical_outcome_evaluation': ['clinical_evaluation'],
    'clinical_training': ['training'],
    'closure': ['event'],
    'college': ['school'],
    'company': ['organization'],
    'competency': ['quality'],
    'continent': ['location'],
    'continuous_learning': ['learning'],
    'country': ['geopolitical_entity'],
    'course': ['training_event'],
    'department': ['building'],
    'development': ['education'],
    'diploma': ['artifact'],
    'doctoral_degree': ['diploma'],
    'educator': ['provider'],
    'elapsed_time': ['time'],
    'elderly_patient': ['patient'],
    'emergency_room': ['room'],
    'empathy': ['soft_skill'],
    'ethical_practice': ['practice'],
    'europe': ['continent'],
    'evaluation': ['event'],
    'facility_closure': ['closure'],
    'fail_to_rescue_rate': ['quantifiable_measurement'],
    'fair_pay': ['pay'],
    'family_nurse_practitioner': ['nurse_practitioner'],
    'female_patient': ['patient'],
    'florence_nightingale': ['person'],
    'gender_bias': ['bias'],
    'group': ['agent'],
    'health': ['condition'],
    'health_care': ['care_event'],
    'health_care_education': ['education'],
    'health_care_provider': ['provider'],
    'health_care_quality': ['quality'],
    'health_care_reform': ['reform'],
    'health_care_specialist': ['specialist'],
    'health_department': ['department'],
    'historical_nursing': ['nursing'],
    'history': ['event'],
    'home': ['building'],
    'hospital': ['medical_building'],
    'johnson_and_johnson': ['company'],
    'labor_event': ['event'],
    'learning': ['education'],
    'long_term_health_care': ['health_care'],
    'male_patient': ['patient'],
    'master_of_arts': ['masters_degree'],
    'master_of_science': ['masters_degree'],
    'master_of_science_in_nursing': ['master_of_science'],
    'masters_degree': ['diploma'],
    'medical_building': ['building'],
    'medical_facility_closure': ['facility_closure'],
    'mental_health': ['health'],
    'modern_nursing': ['nursing'],
    'mortality_rate': ['quantifiable_measurement'],
    'national_certification': ['certification'],
    'nurse': ['health_care_specialist'],
    'nurse_educator': ['educator'],
    'nurse_practitioner': ['advanced_practice_registered_nurse'],
    'nursing': ['profession'],
    'nursing_diploma': ['diploma'],
    'nursing_education': ['health_care_education'],
    'nursing_home': ['home'],
    'nursing_school': ['school'],
    'nursing_student': ['student'],
    'outcome': ['event'],
    'outcome_evaluation': ['evaluation'],
    'patient': ['receiver'],
    'patient_care': ['health_care'],
    'patient_treatment': ['treatment_event'],
    'patient_treatment_plan': ['plan'],
    'pay': ['event'],
    'pediactric_patient': ['patient'],
    'peer_review': ['evaluation'],
    'permanent': ['elapsed_time'],
    'person': ['agent'],
    'personal_touch': ['soft_skill'],
    'pharmacist': ['health_care_specialist'],
    'pharmacy': ['medical_building'],
    'physician': ['health_care_specialist'],
    'plan': ['artifact'],
    'political_activity': ['activity'],
    'political_group': ['group'],
    'practice': ['activity'],
    'primary_care': ['health_care'],
    'professional_development': ['development'],
    'protestant_church': ['church'],
    'provider': ['agent'],
    'psychiatric_mental_health_nurse_practitioner': ['nurse_practitioner'],
    'public_health_department': ['health_department'],
    'quality': ['event'],
    'quantifiable_measurement': ['quantity'],
    'racial_bias': ['bias'],
    'readmission': ['admission'],
    'readmission_rate': ['quantifiable_measurement'],
    'receiver': ['agent'],
    'reform': ['event'],
    'registered_nurse': ['nurse'],
    'regulation': ['artifact'],
    'religious_group': ['group'],
    'room': ['building'],
    'rule': ['artifact'],
    'school': ['building'],
    'shortage': ['event'],
    'site': ['building'],
    'soft_skill': ['skill'],
    'spain': ['country'],
    'spanish': ['nationality'],
    'spanish_hospital': ['hospital'],
    'specialist': ['provider'],
    'staff': ['provider'],
    'staffing': ['event'],
    'staffing_level': ['quantifiable_measurement'],
    'staffing_shortage': ['shortage'],
    'strike': ['labor_event'],
    'student': ['receiver'],
    'surgeon': ['provider'],
    'surgery': ['medical_building'],
    'temporary': ['elapsed_time'],
    'training': ['education'],
    'training_event': ['event'],
    'treatment_event': ['event'],
    'urgent_care': ['medical_building']}

    def data(self) -> dict:
        return self.__data

    def find(self,
             term: str) -> str or None:
        if term in self.__data:
            return self.__data[term]
