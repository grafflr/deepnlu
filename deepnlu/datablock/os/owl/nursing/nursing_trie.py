
#!/usr/bin/env python
# -*- coding: UTF-8 -*-

# pylint:disable=bad-whitespace
# pylint:disable=line-too-long
# pylint:disable=too-many-lines
# pylint:disable=invalid-name

# #########################################################
#
#       ************** !! WARNING !! ***************
#       ******* THIS FILE WAS AUTO-GENERATED *******
#       ********* DO NOT MODIFY THIS FILE **********
#
# #########################################################

class NursingTrie(object):

    @staticmethod
    def prov() -> dict:
        return {
 'action': ['router.py',
            'plac_core.py',
            'owl2py_orchestrator.py',
            'generate_runtime_dictionaries.py',
            'generate_runtime_dictionary.py',
            'owl_data_load_dict.py',
            'common_utils.py'],
 'config': {'classname': 'NursingTrie',
            'filename': 'nursing_trie',
            'queries': ['trie.sparql'],
            'transformers': ['lowercase', 'trie']},
 'source': 'nursing.owl',
 'time': '2022-05-20 17:02:25.358704'}

    __data = {
    1: [   'certification',
           'development',
           'readmission',
           'association',
           'apothecary',
           'department',
           'regulation',
           'evaluation',
           'pharmacist',
           'specialist',
           'competency',
           'physician',
           'admission',
           'permanent',
           'continent',
           'temporary',
           'learning',
           'provider',
           'practice',
           'pharmacy',
           'american',
           'training',
           'educator',
           'receiver',
           'hospital',
           'shortage',
           'staffing',
           'outcome',
           'company',
           'nursing',
           'surgery',
           'diploma',
           'student',
           'spanish',
           'surgeon',
           'airport',
           'patient',
           'college',
           'chemist',
           'country',
           'quality',
           'empathy',
           'closure',
           'century',
           'history',
           'europe',
           'person',
           'clinic',
           'school',
           'health',
           'strike',
           'church',
           'reform',
           'course',
           'group',
           'nurse',
           'staff',
           'spain',
           'rule',
           'city',
           'site',
           'room',
           'home',
           'plan',
           'pay'],
    2: [   'quantifiable',
           'professional',
           'readmission',
           'pediactric',
           'associates',
           'registered',
           'continuous',
           'protestant',
           'historical',
           'political',
           'mortality',
           'religious',
           'bachelors',
           'emergency',
           'treatment',
           'catholic',
           'florence',
           'clinical',
           'training',
           'facility',
           'doctoral',
           'personal',
           'staffing',
           'national',
           'outcome',
           'nursing',
           'primary',
           'spanish',
           'elapsed',
           'elderly',
           'patient',
           'masters',
           'ethical',
           'medical',
           'modern',
           'urgent',
           'female',
           'mental',
           'racial',
           'gender',
           'health',
           'labor',
           'nurse',
           'acute',
           'male',
           'soft',
           'care',
           'peer',
           'fair'],
    3: [   'american',
           'clinical',
           'bachelor',
           'johnson',
           'medical',
           'patient',
           'family',
           'health',
           'master',
           'public'],
    4: ['advanced', 'fail', 'long'],
    5: ['psychiatric', 'bachelor', 'master'],
    6: ['american']}

    def data(self) -> dict:
        return self.__data

    def find(self,
             term: str) -> str or None:
        if term in self.__data:
            return self.__data[term]
