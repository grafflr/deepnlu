
#!/usr/bin/env python
# -*- coding: UTF-8 -*-

# pylint:disable=bad-whitespace
# pylint:disable=line-too-long
# pylint:disable=too-many-lines
# pylint:disable=invalid-name

# #########################################################
#
#       ************** !! WARNING !! ***************
#       ******* THIS FILE WAS AUTO-GENERATED *******
#       ********* DO NOT MODIFY THIS FILE **********
#
# #########################################################

class RolesSpans(object):

    @staticmethod
    def prov() -> dict:
        return {
 'action': ['router.py',
            'plac_core.py',
            'owl2py_orchestrator.py',
            'generate_runtime_dictionaries.py',
            'generate_runtime_dictionary.py',
            'owl_data_load_dict.py',
            'common_utils.py'],
 'config': {'classname': 'RolesSpans',
            'filename': 'roles_spans',
            'queries': ['spans.sparql'],
            'transformers': ['spans']},
 'source': 'roles.owl',
 'time': '2022-04-27 21:17:15.431855'}

    __data = {
    'administrative': [   {   'canon': 'administrative_accounting',
                              'content': {'accounting'},
                              'distance': 3,
                              'forward': True,
                              'reverse': True}],
    'budget': [   {   'canon': 'budget_allocation',
                      'content': {'allocation'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'communication': [   {   'canon': 'communication_technician',
                             'content': {'technician'},
                             'distance': 3,
                             'forward': True,
                             'reverse': True},
                         {   'canon': 'communication_manager',
                             'content': {'manager'},
                             'distance': 3,
                             'forward': True,
                             'reverse': True}],
    'conduct': [   {   'canon': 'conduct_interviews',
                       'content': {'interviews'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}],
    'customer': [   {   'canon': 'customer_service',
                        'content': {'service'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'data': [   {   'canon': 'data_gathering',
                    'content': {'gathering'},
                    'distance': 3,
                    'forward': True,
                    'reverse': True},
                {   'canon': 'data_analyst',
                    'content': {'analyst'},
                    'distance': 3,
                    'forward': True,
                    'reverse': True}],
    'delivery': [   {   'canon': 'delivery_coordination',
                        'content': {'coordination'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'employee': [   {   'canon': 'employee_onboarding',
                        'content': {'onboarding'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True},
                    {   'canon': 'employee_safety',
                        'content': {'safety'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'event': [   {   'canon': 'event_marketing',
                     'content': {'marketing'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'external': [   {   'canon': 'external_auditor',
                        'content': {'auditor'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'financial': [   {   'canon': 'financial_statement_preparation',
                         'content': {'statement', 'preparation'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'financial_analyst',
                         'content': {'analyst'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'freight': [   {   'canon': 'freight_shipping',
                       'content': {'shipping'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}],
    'hiring': [   {   'canon': 'hiring_manager',
                      'content': {'manager'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'historical': [   {   'canon': 'historical_analysis',
                          'content': {'analysis'},
                          'distance': 3,
                          'forward': True,
                          'reverse': True}],
    'human': [   {   'canon': 'human_resources',
                     'content': {'resources'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'internal': [   {   'canon': 'internal_auditor',
                        'content': {'auditor'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'inventory': [   {   'canon': 'inventory_tracking',
                         'content': {'tracking'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'inventory_manager',
                         'content': {'manager'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'inventory_analysis',
                         'content': {'analysis'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'invoice': [   {   'canon': 'invoice_preparation',
                       'content': {'preparation'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}],
    'ip': [   {   'canon': 'ip_protection',
                  'content': {'protection'},
                  'distance': 3,
                  'forward': True,
                  'reverse': True}],
    'knowledge': [   {   'canon': 'knowledge_organization',
                         'content': {'organization'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'marketing': [   {   'canon': 'marketing_director',
                         'content': {'director'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'materials': [   {   'canon': 'materials_administration',
                         'content': {'administration'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'model': [   {   'canon': 'model_generation',
                     'content': {'generation'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True},
                 {   'canon': 'model_development',
                     'content': {'development'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'order': [   {   'canon': 'order_processing',
                     'content': {'processing'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'public': [   {   'canon': 'public_relations',
                      'content': {'relations'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'quality': [   {   'canon': 'quality_assurance',
                       'content': {'assurance'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}],
    'record': [   {   'canon': 'record_maintenance',
                      'content': {'maintenance'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'retail': [   {   'canon': 'retail_replenishment',
                      'content': {'replenishment'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'risk': [   {   'canon': 'risk_analysis',
                    'content': {'analysis'},
                    'distance': 3,
                    'forward': True,
                    'reverse': True}],
    'sales': [   {   'canon': 'sales_role',
                     'content': {'role'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True},
                 {   'canon': 'sales_person',
                     'content': {'person'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'senior': [   {   'canon': 'senior_support_agent',
                      'content': {'agent', 'support'},
                      'distance': 3,
                      'forward': True,
                      'reverse': True}],
    'software': [   {   'canon': 'software_support',
                        'content': {'support'},
                        'distance': 3,
                        'forward': True,
                        'reverse': True}],
    'stock': [   {   'canon': 'stock_level_reporting',
                     'content': {'reporting', 'level'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'support': [   {   'canon': 'support_agent',
                       'content': {'agent'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}],
    'tax': [   {   'canon': 'tax_preparation',
                   'content': {'preparation'},
                   'distance': 3,
                   'forward': True,
                   'reverse': True}],
    'technical': [   {   'canon': 'support_agent',
                         'content': {'support'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'senior_support_agent',
                         'content': {'support'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'technical_support',
                         'content': {'support'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True},
                     {   'canon': 'technical_role',
                         'content': {'role'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'transport': [   {   'canon': 'transport_operator',
                         'content': {'operator'},
                         'distance': 3,
                         'forward': True,
                         'reverse': True}],
    'trend': [   {   'canon': 'trend_analysis',
                     'content': {'analysis'},
                     'distance': 3,
                     'forward': True,
                     'reverse': True}],
    'vehicle': [   {   'canon': 'vehicle_maintenance',
                       'content': {'maintenance'},
                       'distance': 3,
                       'forward': True,
                       'reverse': True}]}

    def data(self) -> dict:
        return self.__data

    def find(self,
             term: str) -> str or None:
        if term in self.__data:
            return self.__data[term]
